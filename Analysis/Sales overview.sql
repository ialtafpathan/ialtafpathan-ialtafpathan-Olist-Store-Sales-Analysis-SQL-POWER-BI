/*											 OVERALL SALES ANALYSIS                                                           */ 
-- 1. a)What is the total revenue generated by Olist? b.)how has it changed over time?
SELECT 
    ROUND(SUM(p.payment_value), 0)
FROM
    payments p
        JOIN
    orders od ON p.order_id = od.order_id
WHERE
    od.order_status <> 'canceled'
        AND od.order_delivered_customer_date IS NOT NULL;
    
-- yearly Sales 

SELECT 
    YEAR(od.order_purchase_timestamp) AS years,
    ROUND(SUM(p.payment_value), 0) AS revenue
FROM
    orders od
        JOIN
    payments p ON od.order_id = p.order_id
WHERE
    od.order_status <> 'canceled'
        AND od.order_delivered_customer_date IS NOT NULL
GROUP BY years
ORDER BY revenue ASC;

-- quartely sales 
SELECT 
    YEAR(od.order_purchase_timestamp) AS years,
    QUARTER(od.order_purchase_timestamp) AS qrt,
    ROUND(SUM(p.payment_value), 0) AS revenue
FROM
    orders od
        JOIN
    payments p ON od.order_id = p.order_id
WHERE
    od.order_status <> 'canceled'
        AND od.order_delivered_customer_date IS NOT NULL
GROUP BY years , qrt
ORDER BY revenue ASC;
    
-- monthly sales 
SELECT 
    YEAR(od.order_purchase_timestamp) AS years,
    QUARTER(od.order_purchase_timestamp) AS qrt,
    MONTHNAME(od.order_purchase_timestamp) AS months,
    ROUND(SUM(p.payment_value), 0) AS revenue
FROM
    orders od
        JOIN
    payments p ON od.order_id = p.order_id
WHERE
    od.order_status <> 'canceled'
        AND od.order_delivered_customer_date IS NOT NULL
GROUP BY years , qrt , months
ORDER BY revenue ASC;  


-- top 10 saling products by order counts
SELECT 
    p.category_name_english, COUNT(order_id) AS order_count
FROM
    products p
        JOIN
    order_items oi ON p.product_id = oi.product_id
GROUP BY p.category_name_english
ORDER BY order_count DESC
LIMIT 10;

-- bottom 10 products by order counts
SELECT 
    p.category_name_english, COUNT(order_id) AS order_count
FROM
    products p
        JOIN
    order_items oi ON p.product_id = oi.product_id
GROUP BY p.category_name_english
ORDER BY order_count ASC
LIMIT 10;

-- daily frequently purchasing period

SELECT 
    HOUR(order_purchase_timestamp) AS purchase_hour,
    COUNT(order_id)
FROM
    orders
GROUP BY purchase_hour
ORDER BY purchase_hour;

-- Weekly frequent purchasing period 
SELECT 
    DAYNAME(order_purchase_timestamp) AS day_of_the_week,
    COUNT(*) AS order_count
FROM
    orders
GROUP BY day_of_the_week;

-- sales performance by states 
SELECT 
    c.customer_state,
    CONCAT(ROUND(SUM(payment_value) / 1000000, 2),
            'M') AS total_sales
FROM
    customers c
        JOIN
    orders oi ON c.customer_id = oi.customer_id
        JOIN
    payments p ON oi.order_id = p.order_id
GROUP BY c.customer_state;

-- slaes Converstion Rate 
SELECT 
    SUM(CASE
        WHEN order_status = 'delivered' THEN 1
        ELSE 0
    END) / COUNT(*) * 100 AS ConversionRate
FROM
    orders;   

-- satewise conversation rate
SELECT 
    c.states,
    ROUND(SUM(CASE
                WHEN order_status = 'delivered' THEN 1
                ELSE 0
            END) / COUNT(*) * 100,
            2) AS ConversionRate
FROM
    orders o
        JOIN
    customers c ON o.customer_id = c.customer_id
GROUP BY c.states
ORDER BY ConversionRate DESC
LIMIT 10;

-- product cateory by sales 
SELECT 
    p.category_name_english, SUM(price) / 1000000 AS sales
FROM
    products p
        JOIN
    order_items oi ON p.product_id = oi.product_id
GROUP BY p.category_name_english
ORDER BY sales DESC
LIMIT 10;  

-- product category by profit 
SELECT 
    p.category_name_english,
    CONCAT(ROUND(((SUM(pm.payment_value) - SUM(oi.price)) / SUM(pm.payment_value)) * 100,
                    2),
            ' % ') AS profit_margin
FROM
    payments pm
        JOIN
    order_items oi ON pm.order_id = oi.order_id
        JOIN
    products p ON oi.product_id = p.product_id
GROUP BY p.category_name_english
ORDER BY profit_margin DESC
LIMIT 10;
  
-- by profi margin%              
select p.category_name_english,
     (sum(pm.payment_value)-sum(oi.price)) as total_profit,
       ((sum(pm.payment_value)-sum(oi.price))/sum(pm.payment_value))*100 as profit_margin
       
from
    payments pm
JOIN 
    order_items oi ON pm.order_id = oi.order_id 
JOIN 
    products p ON oi.product_id = p.product_id  
GROUP BY 
    p.category_name_english
ORDER BY 
    profit_margin DESC      
       limit 10;
        